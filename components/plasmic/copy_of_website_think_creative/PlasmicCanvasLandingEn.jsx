// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bWHFFGzvmXLfYr1WgyzKPi
// Component: UHctnP5cmrbj
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicImg as PlasmicImg__,
  PlasmicPageGuard as PlasmicPageGuard__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import Button from "../../Button"; // plasmic-import: WHYlEpdhrnG1/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: bWHFFGzvmXLfYr1WgyzKPi/projectcss
import sty from "./PlasmicCanvasLandingEn.module.css"; // plasmic-import: UHctnP5cmrbj/css
import ThinkCreativeLogo3Icon from "./icons/PlasmicIcon__ThinkCreativeLogo3"; // plasmic-import: IhdEM6_8vPCW/icon
import Line8Icon from "./icons/PlasmicIcon__Line8"; // plasmic-import: ZrOfyKZAQQsg/icon
import ThinkCreativeLogoIcon from "./icons/PlasmicIcon__ThinkCreativeLogo"; // plasmic-import: bRFBfvw10uJX/icon
import CanvasLogo2Icon from "./icons/PlasmicIcon__CanvasLogo2"; // plasmic-import: jh8JB6cVEVx9/icon
import SocialMediaIconSquareFacebookIcon from "./icons/PlasmicIcon__SocialMediaIconSquareFacebook"; // plasmic-import: yLUXlrvbsZoG/icon
import SocialMediaIconSquareInstagramIcon from "./icons/PlasmicIcon__SocialMediaIconSquareInstagram"; // plasmic-import: gI4BGKbWorHa/icon
import Group73Icon from "./icons/PlasmicIcon__Group73"; // plasmic-import: HL7-S_wJ6XKa/icon
import PasswordIcon from "./icons/PlasmicIcon__Password"; // plasmic-import: we1OhbWb0rjR/icon
import ChevronIcon from "./icons/PlasmicIcon__Chevron"; // plasmic-import: qBE-9ZVs4cGw/icon
import EmailIcon from "./icons/PlasmicIcon__Email"; // plasmic-import: dL42h3bLaL0H/icon
import PhoneIcon from "./icons/PlasmicIcon__Phone"; // plasmic-import: fqQ65QTeXy9p/icon
import MarkIcon from "./icons/PlasmicIcon__Mark"; // plasmic-import: vNr_0fp69FPw/icon

createPlasmicElementProxy;

export const PlasmicCanvasLandingEn__VariantProps = new Array();

export const PlasmicCanvasLandingEn__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCanvasLandingEn__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const dataSourcesCtx = usePlasmicDataSourceContext();
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicCanvasLandingEn.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicCanvasLandingEn.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicCanvasLandingEn.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"landing"}
          data-plasmic-override={overrides.landing}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.landing
          )}
        >
          <div
            data-plasmic-name={"canvasLandingPage"}
            data-plasmic-override={overrides.canvasLandingPage}
            className={classNames(projectcss.all, sty.canvasLandingPage)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"navElements"}
              data-plasmic-override={overrides.navElements}
              hasGap={true}
              className={classNames(projectcss.all, sty.navElements)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__eJ4V7)}
                displayHeight={"50px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"48px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/copy_of_website_think_creative/images/canvas1.svg",
                  fullWidth: 48,
                  fullHeight: 50,
                  aspectRatio: 0.96
                }}
              />

              <Stack__
                as={"div"}
                data-plasmic-name={"pageContent"}
                data-plasmic-override={overrides.pageContent}
                hasGap={true}
                className={classNames(projectcss.all, sty.pageContent)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bfFAq
                  )}
                >
                  {"Initiatives"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__byUSd
                  )}
                >
                  {"About"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nRzFp
                  )}
                >
                  {"Contact us"}
                </div>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__w35Ky
                )}
              >
                {"AR"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame39499"}
              data-plasmic-override={overrides.frame39499}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame39499)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"heroContent"}
                data-plasmic-override={overrides.heroContent}
                hasGap={true}
                className={classNames(projectcss.all, sty.heroContent)}
              >
                <div
                  data-plasmic-name={"whatIsCanvasWhyShouldICare"}
                  data-plasmic-override={overrides.whatIsCanvasWhyShouldICare}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.whatIsCanvasWhyShouldICare
                  )}
                >
                  {"What is Canvas, why should I care? "}
                </div>
                <div
                  data-plasmic-name={
                    "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow"
                  }
                  data-plasmic-override={
                    overrides.libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow
                  )}
                >
                  {
                    "Libyan investors and entrepreneurs don't have a home. Your passion and hard work are scattered. Canvas aims to support both groups to create a better tomorrow and uplift meaningful, impactful projects. Check out how below. "
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame39542"}
                data-plasmic-override={overrides.frame39542}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame39542)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3Rpm
                  )}
                >
                  {"__ CANVAS FUNDED BY __"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"logos"}
                  data-plasmic-override={overrides.logos}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.logos)}
                >
                  <ThinkCreativeLogo3Icon
                    className={classNames(projectcss.all, sty.svg__bUnB)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"group"}
                    data-plasmic-override={overrides.group}
                    className={classNames(projectcss.all, sty.group)}
                  >
                    <div
                      data-plasmic-name={"euEuEmblemFlagFlagPositive"}
                      data-plasmic-override={
                        overrides.euEuEmblemFlagFlagPositive
                      }
                      className={classNames(
                        projectcss.all,
                        sty.euEuEmblemFlagFlagPositive
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__n9XcY)}
                        displayHeight={"39.999px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"59.999px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/copy_of_website_think_creative/images/euFlag.svg",
                          fullWidth: 59.999,
                          fullHeight: 39.999,
                          aspectRatio: 1.5
                        }}
                      />
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"startUpLogo101"}
                    data-plasmic-override={overrides.startUpLogo101}
                    className={classNames(projectcss.all, sty.startUpLogo101)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zeaY8
                    )}
                  >
                    {"spark"}
                  </div>
                  <div
                    data-plasmic-name={"image3"}
                    data-plasmic-override={overrides.image3}
                    className={classNames(projectcss.all, sty.image3)}
                  />
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame39500"}
              data-plasmic-override={overrides.frame39500}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame39500)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"frame39541"}
                data-plasmic-override={overrides.frame39541}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame39541)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ge64T
                  )}
                >
                  {"GET INVOLVED\nJoin Us"}
                </div>
                <Line8Icon
                  className={classNames(projectcss.all, sty.svg__eDwQq)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pjFy9
                  )}
                >
                  {"Learn about how Canvas can help your specific needs."}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame39516"}
                data-plasmic-override={overrides.frame39516}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame39516)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame39517"}
                  data-plasmic-override={overrides.frame39517}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame39517)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__snrh
                    )}
                  >
                    {"Canvas for Investors"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6H9SD
                    )}
                  >
                    {
                      "Interested in discovering the next big opportunity? Here\u2019s how Canvas can help you."
                    }
                  </div>
                  <Button
                    data-plasmic-name={"openButton"}
                    data-plasmic-override={overrides.openButton}
                    className={classNames("__wab_instance", sty.openButton)}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame39518"}
                data-plasmic-override={overrides.frame39518}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame39518)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame39519"}
                  data-plasmic-override={overrides.frame39519}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame39519)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6C1LV
                    )}
                  >
                    {"Canvas for Entrepreneurs"}
                  </div>
                  <div
                    data-plasmic-name={
                      "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp"
                    }
                    data-plasmic-override={
                      overrides.areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp
                    )}
                  >
                    {
                      "Are you trying to get a project off the ground or grow into the next stage? Here\u2019s how Canvas can help. "
                    }
                  </div>
                  <Button
                    data-plasmic-name={"openButton2"}
                    data-plasmic-override={overrides.openButton2}
                    className={classNames("__wab_instance", sty.openButton2)}
                  />
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"canvasSection"}
              data-plasmic-override={overrides.canvasSection}
              hasGap={true}
              className={classNames(projectcss.all, sty.canvasSection)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"description"}
                data-plasmic-override={overrides.description}
                hasGap={true}
                className={classNames(projectcss.all, sty.description)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kwLkT
                  )}
                >
                  {"Who Are We?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mueGe
                  )}
                >
                  {
                    "Canvas is one of Think Creative\u2019s initiatives that strives to push Libya in a better direction. Our goal is to support our youth and bolster the Libyan economy with less reliance on petrol."
                  }
                </div>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame39540"}
              data-plasmic-override={overrides.frame39540}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame39540)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"frame39539"}
                data-plasmic-override={overrides.frame39539}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame39539)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wNZq
                  )}
                >
                  {"Our Partners"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame39523"}
                data-plasmic-override={overrides.frame39523}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame39523)}
              >
                <div
                  data-plasmic-name={"enVFundedByTheEuPos2"}
                  data-plasmic-override={overrides.enVFundedByTheEuPos2}
                  className={classNames(
                    projectcss.all,
                    sty.enVFundedByTheEuPos2
                  )}
                />

                <div
                  data-plasmic-name={"libyaStartUpLogo2"}
                  data-plasmic-override={overrides.libyaStartUpLogo2}
                  className={classNames(projectcss.all, sty.libyaStartUpLogo2)}
                />

                <div
                  data-plasmic-name={"spark2"}
                  data-plasmic-override={overrides.spark2}
                  className={classNames(projectcss.all, sty.spark2)}
                />

                <div
                  data-plasmic-name={"frame39522"}
                  data-plasmic-override={overrides.frame39522}
                  className={classNames(projectcss.all, sty.frame39522)}
                >
                  <div
                    data-plasmic-name={"image4"}
                    data-plasmic-override={overrides.image4}
                    className={classNames(projectcss.all, sty.image4)}
                  />
                </div>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              hasGap={true}
              className={classNames(projectcss.all, sty.footer)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"frame"}
                data-plasmic-override={overrides.frame}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"thinkCrative"}
                  data-plasmic-override={overrides.thinkCrative}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.thinkCrative)}
                >
                  <ThinkCreativeLogoIcon
                    className={classNames(projectcss.all, sty.svg__xo7Eh)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"description2"}
                    data-plasmic-override={overrides.description2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.description2
                    )}
                  >
                    {"Ignite Change. Think Creative."}
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"companyDetails"}
                    data-plasmic-override={overrides.companyDetails}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.companyDetails)}
                  >
                    <CanvasLogo2Icon
                      className={classNames(projectcss.all, sty.svg__roM2)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      data-plasmic-name={"socialMediaContainer"}
                      data-plasmic-override={overrides.socialMediaContainer}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.socialMediaContainer
                      )}
                    >
                      <SocialMediaIconSquareFacebookIcon
                        className={classNames(projectcss.all, sty.svg__fLd50)}
                        role={"img"}
                      />

                      <SocialMediaIconSquareInstagramIcon
                        className={classNames(projectcss.all, sty.svg___3XiLw)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"socialMediaIconSquareLinkedIn"}
                        data-plasmic-override={
                          overrides.socialMediaIconSquareLinkedIn
                        }
                        className={classNames(
                          projectcss.all,
                          sty.socialMediaIconSquareLinkedIn
                        )}
                      >
                        <Group73Icon
                          className={classNames(projectcss.all, sty.svg__hpPc)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"details"}
                  data-plasmic-override={overrides.details}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.details)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"footerColumn"}
                    data-plasmic-override={overrides.footerColumn}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.footerColumn)}
                  >
                    <div
                      data-plasmic-name={"footerTitle"}
                      data-plasmic-override={overrides.footerTitle}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.footerTitle
                      )}
                    >
                      {"About us"}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"footerLinks"}
                      data-plasmic-override={overrides.footerLinks}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.footerLinks)}
                    >
                      <div
                        data-plasmic-name={"link"}
                        data-plasmic-override={overrides.link}
                        className={classNames(projectcss.all, sty.link)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"masterLink"}
                          data-plasmic-override={overrides.masterLink}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.masterLink)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedPassword"}
                              data-plasmic-override={
                                overrides.lineRoundedPassword
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedPassword
                              )}
                            >
                              <PasswordIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__rkN52
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oGt9Y
                            )}
                          >
                            {"What is Canvas"}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedChevronDown"}
                              data-plasmic-override={
                                overrides.lineRoundedChevronDown
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedChevronDown
                              )}
                            >
                              <ChevronIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xoSbc
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                        </Stack__>
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"footerColumn2"}
                    data-plasmic-override={overrides.footerColumn2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.footerColumn2)}
                  >
                    <div
                      data-plasmic-name={"footerTitle2"}
                      data-plasmic-override={overrides.footerTitle2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.footerTitle2
                      )}
                    >
                      {"Initiative"}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"footerLinks2"}
                      data-plasmic-override={overrides.footerLinks2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.footerLinks2)}
                    >
                      <div
                        data-plasmic-name={"link2"}
                        data-plasmic-override={overrides.link2}
                        className={classNames(projectcss.all, sty.link2)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"masterLink2"}
                          data-plasmic-override={overrides.masterLink2}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.masterLink2
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedPassword2"}
                              data-plasmic-override={
                                overrides.lineRoundedPassword2
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedPassword2
                              )}
                            >
                              <PasswordIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__sqJr
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7GwqV
                            )}
                          >
                            {"For Entrepreneurs"}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedChevronDown2"}
                              data-plasmic-override={
                                overrides.lineRoundedChevronDown2
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedChevronDown2
                              )}
                            >
                              <ChevronIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__pdiHe
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"link3"}
                        data-plasmic-override={overrides.link3}
                        className={classNames(projectcss.all, sty.link3)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"masterLink3"}
                          data-plasmic-override={overrides.masterLink3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.masterLink3
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedPassword3"}
                              data-plasmic-override={
                                overrides.lineRoundedPassword3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedPassword3
                              )}
                            >
                              <PasswordIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__yyt0E
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__egHlN
                            )}
                          >
                            {"For Investores"}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedChevronDown3"}
                              data-plasmic-override={
                                overrides.lineRoundedChevronDown3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedChevronDown3
                              )}
                            >
                              <ChevronIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__rmrsO
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                        </Stack__>
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame39468"}
                    data-plasmic-override={overrides.frame39468}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame39468)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"footerColumn3"}
                      data-plasmic-override={overrides.footerColumn3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.footerColumn3)}
                    >
                      <div
                        data-plasmic-name={"footerTitle3"}
                        data-plasmic-override={overrides.footerTitle3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.footerTitle3
                        )}
                      >
                        {"Contacts us"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame39467"}
                      data-plasmic-override={overrides.frame39467}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame39467)}
                    >
                      <div
                        data-plasmic-name={"link4"}
                        data-plasmic-override={overrides.link4}
                        className={classNames(projectcss.all, sty.link4)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"masterLink4"}
                          data-plasmic-override={overrides.masterLink4}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.masterLink4
                          )}
                        >
                          <div
                            data-plasmic-name={"lineRoundedEmail"}
                            data-plasmic-override={overrides.lineRoundedEmail}
                            className={classNames(
                              projectcss.all,
                              sty.lineRoundedEmail
                            )}
                          >
                            <EmailIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ppf9B
                              )}
                              role={"img"}
                            />
                          </div>
                          <div
                            data-plasmic-name={"linkItem"}
                            data-plasmic-override={overrides.linkItem}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.linkItem
                            )}
                          >
                            {"contact@company.com"}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedChevronDown4"}
                              data-plasmic-override={
                                overrides.lineRoundedChevronDown4
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedChevronDown4
                              )}
                            >
                              <ChevronIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__saxvx
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"link5"}
                        data-plasmic-override={overrides.link5}
                        className={classNames(projectcss.all, sty.link5)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"masterLink5"}
                          data-plasmic-override={overrides.masterLink5}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.masterLink5
                          )}
                        >
                          <div
                            data-plasmic-name={"lineRoundedPhone"}
                            data-plasmic-override={overrides.lineRoundedPhone}
                            className={classNames(
                              projectcss.all,
                              sty.lineRoundedPhone
                            )}
                          >
                            <PhoneIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___42QZz
                              )}
                              role={"img"}
                            />
                          </div>
                          <div
                            data-plasmic-name={"linkItem2"}
                            data-plasmic-override={overrides.linkItem2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.linkItem2
                            )}
                          >
                            {"(000) 000 - 0000"}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"lineRoundedChevronDown5"}
                              data-plasmic-override={
                                overrides.lineRoundedChevronDown5
                              }
                              className={classNames(
                                projectcss.all,
                                sty.lineRoundedChevronDown5
                              )}
                            >
                              <ChevronIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__b7NE6
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"group39465"}
                        data-plasmic-override={overrides.group39465}
                        className={classNames(projectcss.all, sty.group39465)}
                      >
                        <div
                          data-plasmic-name={"spacerIconWrapper"}
                          data-plasmic-override={overrides.spacerIconWrapper}
                          className={classNames(
                            projectcss.all,
                            sty.spacerIconWrapper
                          )}
                        >
                          <div
                            data-plasmic-name={"lineRoundedMark"}
                            data-plasmic-override={overrides.lineRoundedMark}
                            className={classNames(
                              projectcss.all,
                              sty.lineRoundedMark
                            )}
                          >
                            <MarkIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ktVw3
                              )}
                              role={"img"}
                            />
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"footerDescription"}
                          data-plasmic-override={overrides.footerDescription}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.footerDescription
                          )}
                        >
                          {"Lorem Lorem Lorem "}
                        </div>
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"footerContent"}
                data-plasmic-override={overrides.footerContent}
                hasGap={true}
                className={classNames(projectcss.all, sty.footerContent)}
              >
                <div
                  data-plasmic-name={"footerContent2"}
                  data-plasmic-override={overrides.footerContent2}
                  className={classNames(projectcss.all, sty.footerContent2)}
                >
                  <div
                    data-plasmic-name={"footerLeft"}
                    data-plasmic-override={overrides.footerLeft}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.footerLeft
                    )}
                  >
                    {"Copyright \u00a9 2024 Think Creative"}
                  </div>
                  <div
                    data-plasmic-name={"footerRight"}
                    data-plasmic-override={overrides.footerRight}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.footerRight
                    )}
                  >
                    {"All Rights Reserved"}
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  landing: [
    "landing",
    "canvasLandingPage",
    "navElements",
    "pageContent",
    "frame39499",
    "heroContent",
    "whatIsCanvasWhyShouldICare",
    "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow",
    "frame39542",
    "logos",
    "group",
    "euEuEmblemFlagFlagPositive",
    "startUpLogo101",
    "image3",
    "frame39500",
    "frame39541",
    "frame39516",
    "frame39517",
    "openButton",
    "frame39518",
    "frame39519",
    "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp",
    "openButton2",
    "canvasSection",
    "description",
    "frame39540",
    "frame39539",
    "frame39523",
    "enVFundedByTheEuPos2",
    "libyaStartUpLogo2",
    "spark2",
    "frame39522",
    "image4",
    "footer",
    "frame",
    "thinkCrative",
    "description2",
    "companyDetails",
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn",
    "details",
    "footerColumn",
    "footerTitle",
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown",
    "footerColumn2",
    "footerTitle2",
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3",
    "frame39468",
    "footerColumn3",
    "footerTitle3",
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription",
    "footerContent",
    "footerContent2",
    "footerLeft",
    "footerRight"
  ],

  canvasLandingPage: [
    "canvasLandingPage",
    "navElements",
    "pageContent",
    "frame39499",
    "heroContent",
    "whatIsCanvasWhyShouldICare",
    "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow",
    "frame39542",
    "logos",
    "group",
    "euEuEmblemFlagFlagPositive",
    "startUpLogo101",
    "image3",
    "frame39500",
    "frame39541",
    "frame39516",
    "frame39517",
    "openButton",
    "frame39518",
    "frame39519",
    "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp",
    "openButton2",
    "canvasSection",
    "description",
    "frame39540",
    "frame39539",
    "frame39523",
    "enVFundedByTheEuPos2",
    "libyaStartUpLogo2",
    "spark2",
    "frame39522",
    "image4",
    "footer",
    "frame",
    "thinkCrative",
    "description2",
    "companyDetails",
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn",
    "details",
    "footerColumn",
    "footerTitle",
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown",
    "footerColumn2",
    "footerTitle2",
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3",
    "frame39468",
    "footerColumn3",
    "footerTitle3",
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription",
    "footerContent",
    "footerContent2",
    "footerLeft",
    "footerRight"
  ],

  navElements: ["navElements", "pageContent"],
  pageContent: ["pageContent"],
  frame39499: [
    "frame39499",
    "heroContent",
    "whatIsCanvasWhyShouldICare",
    "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow",
    "frame39542",
    "logos",
    "group",
    "euEuEmblemFlagFlagPositive",
    "startUpLogo101",
    "image3"
  ],

  heroContent: [
    "heroContent",
    "whatIsCanvasWhyShouldICare",
    "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow"
  ],

  whatIsCanvasWhyShouldICare: ["whatIsCanvasWhyShouldICare"],
  libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow:
    [
      "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow"
    ],

  frame39542: [
    "frame39542",
    "logos",
    "group",
    "euEuEmblemFlagFlagPositive",
    "startUpLogo101",
    "image3"
  ],

  logos: [
    "logos",
    "group",
    "euEuEmblemFlagFlagPositive",
    "startUpLogo101",
    "image3"
  ],

  group: ["group", "euEuEmblemFlagFlagPositive"],
  euEuEmblemFlagFlagPositive: ["euEuEmblemFlagFlagPositive"],
  startUpLogo101: ["startUpLogo101"],
  image3: ["image3"],
  frame39500: [
    "frame39500",
    "frame39541",
    "frame39516",
    "frame39517",
    "openButton",
    "frame39518",
    "frame39519",
    "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp",
    "openButton2"
  ],

  frame39541: ["frame39541"],
  frame39516: ["frame39516", "frame39517", "openButton"],
  frame39517: ["frame39517", "openButton"],
  openButton: ["openButton"],
  frame39518: [
    "frame39518",
    "frame39519",
    "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp",
    "openButton2"
  ],

  frame39519: [
    "frame39519",
    "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp",
    "openButton2"
  ],

  areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp:
    [
      "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp"
    ],

  openButton2: ["openButton2"],
  canvasSection: ["canvasSection", "description"],
  description: ["description"],
  frame39540: [
    "frame39540",
    "frame39539",
    "frame39523",
    "enVFundedByTheEuPos2",
    "libyaStartUpLogo2",
    "spark2",
    "frame39522",
    "image4"
  ],

  frame39539: ["frame39539"],
  frame39523: [
    "frame39523",
    "enVFundedByTheEuPos2",
    "libyaStartUpLogo2",
    "spark2",
    "frame39522",
    "image4"
  ],

  enVFundedByTheEuPos2: ["enVFundedByTheEuPos2"],
  libyaStartUpLogo2: ["libyaStartUpLogo2"],
  spark2: ["spark2"],
  frame39522: ["frame39522", "image4"],
  image4: ["image4"],
  footer: [
    "footer",
    "frame",
    "thinkCrative",
    "description2",
    "companyDetails",
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn",
    "details",
    "footerColumn",
    "footerTitle",
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown",
    "footerColumn2",
    "footerTitle2",
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3",
    "frame39468",
    "footerColumn3",
    "footerTitle3",
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription",
    "footerContent",
    "footerContent2",
    "footerLeft",
    "footerRight"
  ],

  frame: [
    "frame",
    "thinkCrative",
    "description2",
    "companyDetails",
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn",
    "details",
    "footerColumn",
    "footerTitle",
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown",
    "footerColumn2",
    "footerTitle2",
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3",
    "frame39468",
    "footerColumn3",
    "footerTitle3",
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription"
  ],

  thinkCrative: [
    "thinkCrative",
    "description2",
    "companyDetails",
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn"
  ],

  description2: ["description2"],
  companyDetails: [
    "companyDetails",
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn"
  ],

  socialMediaContainer: [
    "socialMediaContainer",
    "socialMediaIconSquareLinkedIn"
  ],

  socialMediaIconSquareLinkedIn: ["socialMediaIconSquareLinkedIn"],
  details: [
    "details",
    "footerColumn",
    "footerTitle",
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown",
    "footerColumn2",
    "footerTitle2",
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3",
    "frame39468",
    "footerColumn3",
    "footerTitle3",
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription"
  ],

  footerColumn: [
    "footerColumn",
    "footerTitle",
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown"
  ],

  footerTitle: ["footerTitle"],
  footerLinks: [
    "footerLinks",
    "link",
    "masterLink",
    "lineRoundedPassword",
    "lineRoundedChevronDown"
  ],

  link: ["link", "masterLink", "lineRoundedPassword", "lineRoundedChevronDown"],
  masterLink: ["masterLink", "lineRoundedPassword", "lineRoundedChevronDown"],
  lineRoundedPassword: ["lineRoundedPassword"],
  lineRoundedChevronDown: ["lineRoundedChevronDown"],
  footerColumn2: [
    "footerColumn2",
    "footerTitle2",
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3"
  ],

  footerTitle2: ["footerTitle2"],
  footerLinks2: [
    "footerLinks2",
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2",
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3"
  ],

  link2: [
    "link2",
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2"
  ],

  masterLink2: [
    "masterLink2",
    "lineRoundedPassword2",
    "lineRoundedChevronDown2"
  ],

  lineRoundedPassword2: ["lineRoundedPassword2"],
  lineRoundedChevronDown2: ["lineRoundedChevronDown2"],
  link3: [
    "link3",
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3"
  ],

  masterLink3: [
    "masterLink3",
    "lineRoundedPassword3",
    "lineRoundedChevronDown3"
  ],

  lineRoundedPassword3: ["lineRoundedPassword3"],
  lineRoundedChevronDown3: ["lineRoundedChevronDown3"],
  frame39468: [
    "frame39468",
    "footerColumn3",
    "footerTitle3",
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription"
  ],

  footerColumn3: ["footerColumn3", "footerTitle3"],
  footerTitle3: ["footerTitle3"],
  frame39467: [
    "frame39467",
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4",
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5",
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription"
  ],

  link4: [
    "link4",
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4"
  ],

  masterLink4: [
    "masterLink4",
    "lineRoundedEmail",
    "linkItem",
    "lineRoundedChevronDown4"
  ],

  lineRoundedEmail: ["lineRoundedEmail"],
  linkItem: ["linkItem"],
  lineRoundedChevronDown4: ["lineRoundedChevronDown4"],
  link5: [
    "link5",
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5"
  ],

  masterLink5: [
    "masterLink5",
    "lineRoundedPhone",
    "linkItem2",
    "lineRoundedChevronDown5"
  ],

  lineRoundedPhone: ["lineRoundedPhone"],
  linkItem2: ["linkItem2"],
  lineRoundedChevronDown5: ["lineRoundedChevronDown5"],
  group39465: [
    "group39465",
    "spacerIconWrapper",
    "lineRoundedMark",
    "footerDescription"
  ],

  spacerIconWrapper: ["spacerIconWrapper", "lineRoundedMark"],
  lineRoundedMark: ["lineRoundedMark"],
  footerDescription: ["footerDescription"],
  footerContent: [
    "footerContent",
    "footerContent2",
    "footerLeft",
    "footerRight"
  ],

  footerContent2: ["footerContent2", "footerLeft", "footerRight"],
  footerLeft: ["footerLeft"],
  footerRight: ["footerRight"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCanvasLandingEn__ArgProps,
          internalVariantPropNames: PlasmicCanvasLandingEn__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCanvasLandingEn__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "landing") {
    func.displayName = "PlasmicCanvasLandingEn";
  } else {
    func.displayName = `PlasmicCanvasLandingEn.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard(WrappedComponent) {
  const PageGuard = props => (
    <PlasmicPageGuard__
      minRole={"9eab1042-97bb-4c23-86ae-711deaf020b6"}
      appId={"bWHFFGzvmXLfYr1WgyzKPi"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </PlasmicPageGuard__>
  );

  return PageGuard;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "bWHFFGzvmXLfYr1WgyzKPi"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicCanvasLandingEn = Object.assign(
  // Top-level PlasmicCanvasLandingEn renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("landing"))),
  {
    // Helper components rendering sub-elements
    canvasLandingPage: makeNodeComponent("canvasLandingPage"),
    navElements: makeNodeComponent("navElements"),
    pageContent: makeNodeComponent("pageContent"),
    frame39499: makeNodeComponent("frame39499"),
    heroContent: makeNodeComponent("heroContent"),
    whatIsCanvasWhyShouldICare: makeNodeComponent("whatIsCanvasWhyShouldICare"),
    libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow:
      makeNodeComponent(
        "libyanInvestorsAndEntrepreneursDontHaveAHomeYourPassionAndHardWorkAreScatteredCanvasAimsToSupportBothGroupsToCreateABetterTomorrowAndUpliftMeaningfulImpactfulProjectsCheckOutHowBelow"
      ),
    frame39542: makeNodeComponent("frame39542"),
    logos: makeNodeComponent("logos"),
    group: makeNodeComponent("group"),
    euEuEmblemFlagFlagPositive: makeNodeComponent("euEuEmblemFlagFlagPositive"),
    startUpLogo101: makeNodeComponent("startUpLogo101"),
    image3: makeNodeComponent("image3"),
    frame39500: makeNodeComponent("frame39500"),
    frame39541: makeNodeComponent("frame39541"),
    frame39516: makeNodeComponent("frame39516"),
    frame39517: makeNodeComponent("frame39517"),
    openButton: makeNodeComponent("openButton"),
    frame39518: makeNodeComponent("frame39518"),
    frame39519: makeNodeComponent("frame39519"),
    areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp:
      makeNodeComponent(
        "areYouTryingToGetAProjectOffTheGroundOrGrowIntoTheNextStageHeresHowCanvasCanHelp"
      ),
    openButton2: makeNodeComponent("openButton2"),
    canvasSection: makeNodeComponent("canvasSection"),
    description: makeNodeComponent("description"),
    frame39540: makeNodeComponent("frame39540"),
    frame39539: makeNodeComponent("frame39539"),
    frame39523: makeNodeComponent("frame39523"),
    enVFundedByTheEuPos2: makeNodeComponent("enVFundedByTheEuPos2"),
    libyaStartUpLogo2: makeNodeComponent("libyaStartUpLogo2"),
    spark2: makeNodeComponent("spark2"),
    frame39522: makeNodeComponent("frame39522"),
    image4: makeNodeComponent("image4"),
    footer: makeNodeComponent("footer"),
    frame: makeNodeComponent("frame"),
    thinkCrative: makeNodeComponent("thinkCrative"),
    description2: makeNodeComponent("description2"),
    companyDetails: makeNodeComponent("companyDetails"),
    socialMediaContainer: makeNodeComponent("socialMediaContainer"),
    socialMediaIconSquareLinkedIn: makeNodeComponent(
      "socialMediaIconSquareLinkedIn"
    ),
    details: makeNodeComponent("details"),
    footerColumn: makeNodeComponent("footerColumn"),
    footerTitle: makeNodeComponent("footerTitle"),
    footerLinks: makeNodeComponent("footerLinks"),
    link: makeNodeComponent("link"),
    masterLink: makeNodeComponent("masterLink"),
    lineRoundedPassword: makeNodeComponent("lineRoundedPassword"),
    lineRoundedChevronDown: makeNodeComponent("lineRoundedChevronDown"),
    footerColumn2: makeNodeComponent("footerColumn2"),
    footerTitle2: makeNodeComponent("footerTitle2"),
    footerLinks2: makeNodeComponent("footerLinks2"),
    link2: makeNodeComponent("link2"),
    masterLink2: makeNodeComponent("masterLink2"),
    lineRoundedPassword2: makeNodeComponent("lineRoundedPassword2"),
    lineRoundedChevronDown2: makeNodeComponent("lineRoundedChevronDown2"),
    link3: makeNodeComponent("link3"),
    masterLink3: makeNodeComponent("masterLink3"),
    lineRoundedPassword3: makeNodeComponent("lineRoundedPassword3"),
    lineRoundedChevronDown3: makeNodeComponent("lineRoundedChevronDown3"),
    frame39468: makeNodeComponent("frame39468"),
    footerColumn3: makeNodeComponent("footerColumn3"),
    footerTitle3: makeNodeComponent("footerTitle3"),
    frame39467: makeNodeComponent("frame39467"),
    link4: makeNodeComponent("link4"),
    masterLink4: makeNodeComponent("masterLink4"),
    lineRoundedEmail: makeNodeComponent("lineRoundedEmail"),
    linkItem: makeNodeComponent("linkItem"),
    lineRoundedChevronDown4: makeNodeComponent("lineRoundedChevronDown4"),
    link5: makeNodeComponent("link5"),
    masterLink5: makeNodeComponent("masterLink5"),
    lineRoundedPhone: makeNodeComponent("lineRoundedPhone"),
    linkItem2: makeNodeComponent("linkItem2"),
    lineRoundedChevronDown5: makeNodeComponent("lineRoundedChevronDown5"),
    group39465: makeNodeComponent("group39465"),
    spacerIconWrapper: makeNodeComponent("spacerIconWrapper"),
    lineRoundedMark: makeNodeComponent("lineRoundedMark"),
    footerDescription: makeNodeComponent("footerDescription"),
    footerContent: makeNodeComponent("footerContent"),
    footerContent2: makeNodeComponent("footerContent2"),
    footerLeft: makeNodeComponent("footerLeft"),
    footerRight: makeNodeComponent("footerRight"),
    // Metadata about props expected for PlasmicCanvasLandingEn
    internalVariantProps: PlasmicCanvasLandingEn__VariantProps,
    internalArgProps: PlasmicCanvasLandingEn__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Canvas Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCanvasLandingEn;
/* prettier-ignore-end */
